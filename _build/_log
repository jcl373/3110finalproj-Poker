### Starting build.
# Target: deck.mli.depends, tags: { package(ANSITerminal), package(ounit2), extension:mli, file:deck.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules deck.mli > deck.mli.depends # cached
# Target: deck.cmi, tags: { package(ANSITerminal), package(ounit2), byte, compile, extension:mli, file:deck.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package ANSITerminal -o deck.cmi deck.mli
# Target: deck.ml.depends, tags: { package(ANSITerminal), package(ounit2), extension:ml, file:deck.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules deck.ml > deck.ml.depends # cached
# Target: deck.cmo, tags: { package(ANSITerminal), package(ounit2), byte, compile, extension:cmo, extension:ml, file:deck.cmo, file:deck.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package ANSITerminal -o deck.cmo deck.ml
+ ocamlfind ocamlc -c -package ounit2 -package ANSITerminal -o deck.cmo deck.ml
File "deck.ml", line 43, characters 4-33:
43 |     push {rank = i; suit = 'C'} d;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10: this expression should have type unit.
File "deck.ml", line 44, characters 4-33:
44 |     push {rank = i; suit = 'D'} d;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10: this expression should have type unit.
File "deck.ml", line 45, characters 4-33:
45 |     push {rank = i; suit = 'H'} d;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10: this expression should have type unit.
File "deck.ml", line 46, characters 4-33:
46 |     push {rank = i; suit = 'S'} d;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10: this expression should have type unit.
# Compilation successful.
